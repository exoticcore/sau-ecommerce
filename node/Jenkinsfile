// node pipeline
pipeline {
    agent any

    tools {nodejs "Node18"}

    stages {

        stage('BUILD') {
            steps {
                dir('node') {
                    sh 'npm install'
                }
            }   
            post {
                success {
                    echo 'Build Successful...'
                }
            }
        }

        stage('UNIT TEST') {
            steps {
                dir('node') {
                    echo 'skiping unit testing...'
                }
            } 
            post {
                success {
                    echo "Unit testing Suscces..."
                }
            }
        }

        
        stage('INTEGRATION TEST') {
            steps {
                echo 'wait for integration state build, skipping...'
            }
        }

        stage('CODE ANALYSIS with SONARQUBE') {
            environment {
                scannerHome = tool 'mysonarscanner4'
            }

            steps {
                withSonarQubeEnv('SonarQubeServer') {
                    sh '''${scannerHome}/bin/sonar-scanner \
                   -Dsonar.projectKey=nodejs \
                   -Dsonar.projectName=Node-application \
                   -Dsonar.projectVersion=1.0 \
                   -Dsonar.sources=./node/ \
                   -Dsonar.language=ts \
                   -Dsonar.javascript.Icov.reportPaths=coverage/lcov.info \
                   -Dsonar.sourceEncoding=UTF-8'''          
                }

                timeout(time: 10, unit: 'MINUTES') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }

    }
}