---
- name: Playbook to install the necessary things to run k8s on Raspberry PIs
  hosts: all
  become: yes
  gather_facts: no
  tasks:
    - name: Update and Upgrade APT packages
      apt:
        update_cache: yes
        upgrade: yes

    - name: Install containerd package
      apt:
        name: containerd
        state: present

    - name: Install Containernetworking-plugins
      apt:
        name: containernetworking-plugins
        state: present
        force: yes

    - name: Add cgroup options to cmdline.txt
      lineinfile:
        path: /boot/cmdline.txt
        line: 'cgroup_enable=cpuset cgroup_enable=memory cgroup_memory=1 swapaccount=1'
        state: present

    - name: Create containerd config file
      file:
        path: /etc/containerd/config.toml
        state: touch
        owner: pikube
        group: pikube

    - name: Generate default containerd config
      command: sudo containerd config default > /etc/containerd/config.toml

    - name: Change ownership of containerd config file
      file:
        path: /etc/containerd/config.toml
        state: file
        owner: root
        group: root

    - name: Change systemd cgroup setting
      lineinfile:
        path: /etc/containerd/config.toml
        line: '^SystemdCgroup = false$'
        replace: 'SystemdCgroup = true'
        state: present

    - name: Add Google Cloud repositories
      apt_repository:
        repo: deb http://packages.cloud.google.com/apt cloud-sdk-xenial main
        state: present

    - name: Add Kubernetes repository
      apt_repository:
        repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
        state: present

    - name: Add Google Cloud repository
      apt_repository:
        repo: deb http://packages.cloud.google.com/apt cloud-sdk-xenial main
        state: present

    - name: Add Kubernetes repository
      apt_repository:
        repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
        state: present

    - name: Install Kubernetes packages
      apt:
        name:
          - kubeadm
          - kubelet
          - kubectl
        state: present
        update_cache: yes

    - name: Hold Kubernetes packages
      apt_mark:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: hold

    - name: Disable swap
      command: sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
      become: yes

    - name: Swap off all swap devices
      command: sudo swapoff -a
      become: yes

    - name: Create modules-load.d configuration file
      file:
        path: /etc/modules-load.d/containerd.conf
        state: touch
        owner: root
        group: root
        mode: 0644

    - name: Write modules-load.d configuration
      lineinfile:
        path: /etc/modules-load.d/containerd.conf
        line: |
          overlay
          br_netfilter
        state: present

    - name: Load overlay module
      command: sudo modprobe overlay
      become: yes

    - name: Load br_netfilter module
      cammand: sudo modprobe br_netfilter
      become: yes

    - name: Create sysctl configuration file
      file:
        path: /etc/sysctl.d/kubernetes.conf
        state: touch
        owner: root
        group: root
        mode: 0644

    - name: Write sysctl configuration
      lineinfile:
        path: /etc/sysctl.d/kubernetes.conf
        line: |
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1
          net.ipv4.ip_forward = 1
        state: present

    - name: Reload sysctl
      become: yes
      command: sudo sysctl --system

    - name: Create CNI directory
      file:
        path: /opt/cni/bin
        state: directory
        owner: root
        group: root
        mode: 0755

    - name: Download CNI plugins
      get_url:
        url: https://github.com/containernetworking/plugins/releases/download/v1.2.0/cni-plugins-linux-arm64-v1.2.0.tgz
        dest: /opt/cni/bin/cni-plugins.tgz
        force: yes

    - name: Extract CNI plugins
      become: yes
      unarchive:
        src: /opt/cni/bin/cni-plugins.tgz
        dest: /opt/cni/bin
        owner: root
        group: root

    - name: Remove CNI plugins tarball
      file:
        path: /opt/cni/bin/cni-plugins.tgz
        state: absent
